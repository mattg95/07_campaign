{"version":3,"sources":["TypeForm.jsx","TextBox.jsx","MpForm.jsx","DisplayMp.jsx","SendEmail.jsx","IntroContent.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TypeForm","passDataUpstream","isMobile","typeformComponent","useRef","buttonRef","useState","typeformWidgetOpen","setTypeformWidgetOpen","mobileTypeform","typeformEmbed","mode","autoClose","onSubmit","response_id","responseId","onClose","useEffect","current","hideScrollbars","opacity","setTimeout","className","ref","onClick","e","preventDefault","open","scrollIntoView","behavior","block","id","TextBox","emailBody","viewContainerClassName","type","inputProps","placeholder","rows","saveButtonContent","cancelButtonContent","editButtonContent","value","onSave","val","emailWithGreeting","trigger","closeOnDocumentClick","onOpen","el","document","createElement","body","appendChild","select","setSelectionRange","execCommand","removeChild","copied","MpForm","dropDownOpen","postcodeError","state","setState","dropdownRef","window","scrollBy","postToApi","postcode","a","fetch","method","headers","then","response","json","data","error","mpData","handleValidation","target","length","test","toUpperCase","emailVisible","onChange","htmlFor","name","DisplayMp","constituency","full_name","party","mpEmailAddress","sendEmail","subject","href","encodeURIComponent","rel","IntroContent","require","config","path","socket","socketIOClient","App","width","innerWidth","generatedEmailBody","emailSubject","positiveTypeFormResponseReturned","greeting","displayMpRef","emailBoxRef","on","formToken","generatedEmail","supportsAid","Object","keys","forEach","key","Container","Row","Col","SendEmail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TagManager","initialize","gtmId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.84d34b3b.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as typeformEmbed from \"@typeform/embed\";\n\nconst TypeForm = ({ passDataUpstream, isMobile }) => {\n  const typeformComponent = useRef(null);\n  const buttonRef = useRef(null);\n  const [typeformWidgetOpen, setTypeformWidgetOpen] = useState(true);\n\n  const mobileTypeform = typeformEmbed.makePopup(\n    `https://z8ivgb8lhnl.typeform.com/to/YbkRDwtc`,\n    {\n      mode: \"popup\",\n      autoClose: 2,\n      onSubmit: ({ response_id }) => {\n        passDataUpstream({ responseId: response_id });\n      },\n      onClose: ({ response_id }) => {\n        passDataUpstream({ responseId: response_id });\n      },\n    }\n  );\n\n  useEffect(() => {\n    !isMobile &&\n      typeformEmbed.makeWidget(\n        typeformComponent.current,\n        `https://z8ivgb8lhnl.typeform.com/to/YbkRDwtc`,\n        {\n          hideScrollbars: true,\n          opacity: 0,\n          onSubmit: ({ response_id }) => {\n            passDataUpstream({ responseId: response_id });\n            setTimeout(() => {\n              setTypeformWidgetOpen(false);\n            }, 3000);\n          },\n        }\n      );\n  }, [typeformComponent, passDataUpstream, isMobile]);\n\n  return (\n    <div>\n      <div className=\"call-to-action text-center\">\n        <button\n          ref={buttonRef}\n          onClick={(e) => {\n            e.preventDefault();\n            isMobile\n              ? mobileTypeform.open()\n              : typeformComponent.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"end\",\n                });\n          }}\n          className=\"btn btn-primary btn-lg main-cta\"\n        >\n          Fill out the survey to email your MP{\" \"}\n        </button>\n        <p className=\"explanation\">\n          <strong>We will draft an email</strong> based on your survey\n          responses,{\" \"}\n          <strong>written to have the maximum impact on your MP.</strong> With\n          your help we can safeguard the support so many need.\n        </p>\n      </div>\n      <div\n        ref={typeformComponent}\n        className={`typeform-widget ${typeformWidgetOpen ? \"\" : \"closed\"}`}\n        id=\"typeform\"\n      />\n    </div>\n  );\n};\n\nexport default TypeForm;\n","/* eslint react-hooks/exhaustive-deps: 0 */ // --> turns eslint warning message off\n\nimport React from \"react\";\nimport EdiText from \"react-editext\";\n\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\n\nconst TextBox = ({ emailBody, passDataUpstream }) => {\n  const copyToClipboard = () => {\n    const el = document.createElement(\"textarea\"); //creating a text area to be removed later (bit hacky)\n    el.value = emailBody;\n    document.body.appendChild(el);\n    el.select();\n    el.setSelectionRange(0, 99999); /* For mobile devices */\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    passDataUpstream({ copied: true });\n  };\n\n  return (\n    <div>\n      <div>\n        <h2 className=\"secondary-header\">Edit your email</h2>\n        <EdiText\n          viewContainerClassName=\"emailBox\"\n          type=\"textarea\"\n          inputProps={{\n            placeholder: \"your email will appear here\",\n            rows: 10,\n          }}\n          saveButtonContent=\"Apply\"\n          cancelButtonContent={<strong>Cancel</strong>}\n          editButtonContent=\"Edit Your Email\"\n          value={emailBody} // validates the webhook response token against the response id from the embedded tyeform widget\n          onSave={(val) => {\n            passDataUpstream({ emailWithGreeting: val }); //if the user edits the text box, a new property called editedResponse is set in state\n          }}\n        />\n\n        <Popup\n          trigger={(open) => (\n            <button className=\"btn btn-outline-primary copy-button\">\n              Copy\n            </button>\n          )}\n          closeOnDocumentClick\n          onOpen={copyToClipboard}\n          className=\"copy-popup\"\n        >\n          <span> Copied to clipboard </span>\n        </Popup>\n      </div>\n    </div>\n  );\n};\n\nexport default TextBox;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nconst MpForm = ({ passDataUpstream }) => {\n  const [state, setState] = useState({\n    dropDownOpen: false,\n    postcodeError: \"\",\n  });\n\n  const { dropDownOpen, postcodeError } = state;\n\n  const dropdownRef = useRef();\n\n  //if the dropdown postcode is opened, on 'don't see your MP' this scrolls the page down to it\n  useEffect(() => {\n    const { current } = dropdownRef;\n    current &&\n      current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n      });\n    window.scrollBy(0, 100);\n  }, [dropDownOpen]);\n\n  const postToApi = async (postcode) => {\n    const response = await fetch(`/api/postcode/${postcode}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          setState({ ...state, postcodeError: data.error });\n        } else {\n          passDataUpstream({ mpData: data });\n          setState({ ...state, postcodeError: \"\" });\n        }\n      });\n    return response;\n  };\n\n  const handleValidation = (e) => {\n    e.preventDefault();\n    const { value } = e.target;\n    const postCodeRegex = /([A-Z][A-HJ-Y]?[0-9][A-Z0-9]? ?[0-9][A-Z]{2}|GIR ?0A{2})$/;\n    if (value) {\n      if (value.length > 5) {\n        if (postCodeRegex.test(value.toUpperCase())) {\n          postToApi(value);\n        } else {\n          setState({ ...state, postcodeError: \"Invalid postcode\" });\n        }\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"button-container\" id=\"postcodeDropdown\">\n        <button\n          className=\"btn btn-lg cta btn-outline-primary left-button\"\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            setState({ ...state, dropDownOpen: true });\n          }}\n        >\n          Don't see your MP?\n        </button>\n        <button\n          className=\"btn btn-lg cta btn-primary right-button \"\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            setState({ ...state, dropDownOpen: false });\n            passDataUpstream({ emailVisible: true });\n          }}\n        >\n          Yes, continue with this MP\n        </button>\n      </div>\n      {dropDownOpen && (\n        <form\n          className=\"get-MP-form\"\n          id=\"postcodeDropdown\"\n          ref={dropdownRef}\n          onChange={handleValidation}\n          onSubmit={handleValidation}\n        >\n          <label htmlFor=\"postcode\">Postcode:</label>\n          <input type=\"text\" name=\"postcode\" />\n          <div className=\"error postcode-error\">\n            {postcodeError ? postcodeError : \"\"}\n          </div>\n        </form>\n      )}\n    </div>\n  );\n};\nexport default MpForm;\n","import React from \"react\";\n\nconst DisplayMp = ({\n  mpData: { constituency, full_name, party, name, error, mpEmailAddress },\n}) => {\n  return (\n    <div className=\"displayMP\" id=\"displayMP\">\n      <h2 className=\"secondary-header\">Find Your MP</h2>\n      <div className=\"mpCard text-center\">\n        <div className=\"error\">{error}</div>\n        <div>{constituency}</div>\n        <div>{name}</div>\n        <div>{full_name}</div>\n        <div>{party}</div>\n        <div className=\"mpEmailAddress\">{mpEmailAddress}</div>\n      </div>\n    </div>\n  );\n};\nexport default DisplayMp;\n","import React from \"react\";\n\nconst sendEmail = ({ subject, body, mpEmailAddress }) => {\n  return (\n    <div className=\"send-email\">\n      <h2 className=\"secondary-header\">Send your email</h2>\n      <p className=\"explanation\">\n        This will open your email service in a different window\n      </p>\n      <a\n        href={\n          \"mailto:\" +\n          mpEmailAddress +\n          \"?Subject=\" +\n          encodeURIComponent(subject) +\n          \"&Body=\" +\n          encodeURIComponent(body)\n        }\n        className=\"btn btn-primary btn-lg cta send-button\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        SEND EMAIL\n      </a>\n    </div>\n  );\n};\nexport default sendEmail;\n","import React from \"react\";\n\n// import ArrowDown from \"./assets/arrow-down.svg\";\n\nconst IntroContent = () => (\n  <div className=\"intro-content\">\n    <h1 className=\"title\">The 0.7% Campaign</h1>\n    <p className=\"intro-para\">\n      The 2019 Conservative Manifesto declared Britain would{\" \"}\n      <strong>\n        \"proudly maintain our commitment to spend 0.7 per cent of GNI on\n        development\"\n      </strong>\n      . But just one year later, the government intends to cut foreign aid\n      indefinitely.<br></br>\n      <br></br> At a time of unprecedented international crisis, with millions\n      at risk of extreme poverty,{\" \"}\n      <strong>Britain must show leadership - not break its commitments.</strong>\n    </p>\n  </div>\n);\nexport default IntroContent;\n","/* eslint react-hooks/exhaustive-deps: 0 */ // --> turns eslint warning message off\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport TypeForm from \"./TypeForm\";\nimport TextBox from \"./TextBox\";\nimport MpForm from \"./MpForm\";\nimport DisplayMp from \"./DisplayMp\";\nimport SendEmail from \"./SendEmail\";\nimport IntroContent from \"./IntroContent\";\nimport Footer from \"./Footer\";\n\nimport \"./App.scss\";\n\nrequire(\"dotenv\").config({ path: \"../.env\" });\n\nconst socket = socketIOClient();\n\nconst App = () => {\n  const [state, setState] = useState({\n    width: window.innerWidth,\n    responseId: \"\",\n    mpData: { error: \"Could not find MP\", name: \"\", full_name: \"\" },\n    generatedEmailBody: \"Your email will appear here\",\n    emailSubject: \"\",\n    positiveTypeFormResponseReturned: false,\n    greeting: \"\",\n    emailWithGreeting: \"\",\n    emailVisible: false,\n  });\n\n  const {\n    responseId,\n    mpData,\n    generatedEmailBody,\n    emailSubject,\n    greeting,\n    emailWithGreeting,\n    positiveTypeFormResponseReturned,\n    width,\n    emailVisible,\n  } = state;\n\n  const displayMpRef = useRef(null);\n  const emailBoxRef = useRef(null);\n\n  useEffect(() => {\n    socket.on(\"typeform-incoming\", ({ formToken, generatedEmail }) => {\n      if (formToken === responseId) {\n        setState({\n          ...state,\n          generatedEmailBody: generatedEmail.body,\n          emailSubject: generatedEmail.subject,\n          mpData: generatedEmail.mpData,\n          greeting: generatedEmail.greeting,\n          emailWithGreeting: generatedEmail.greeting + generatedEmail.body,\n          positiveTypeFormResponseReturned: generatedEmail.supportsAid,\n        });\n      }\n    });\n  }, [responseId]);\n\n  useEffect(() => {\n    if (mpData) {\n      const { full_name } = mpData;\n      if (full_name) {\n        setState({\n          ...state,\n          greeting: `Dear ${full_name},\\n`,\n        });\n      }\n    }\n  }, [mpData.name, mpData.full_name]);\n\n  useEffect(() => {\n    setState({\n      ...state,\n      emailWithGreeting: greeting + generatedEmailBody,\n    });\n  }, [generatedEmailBody, greeting]);\n\n  // const handleWindowSizeChange = () => {\n  //   setState({ ...state, width: window.innerWidth });\n  // };\n\n  // console.log(state);\n\n  // useEffect(() => {\n  //   window.addEventListener(\"resize\", handleWindowSizeChange);\n  //   return () => {\n  //     window.removeEventListener(\"resize\", handleWindowSizeChange);\n  //   };\n  // }, []);\n\n  let isMobile = width && width <= 768;\n\n  useEffect(() => {\n    setTimeout(() => {\n      const { current } = displayMpRef;\n      if (current) {\n        if (isMobile) {\n          if (positiveTypeFormResponseReturned) {\n            current.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\",\n            });\n          }\n        }\n      }\n    }, 2000);\n  }, [displayMpRef, positiveTypeFormResponseReturned]);\n\n  //once the emailBox postcode is rendered on click of 'Continue with this MP', this scrolls the page down to it\n  useEffect(() => {\n    const { current } = emailBoxRef;\n    current &&\n      current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n      });\n  }, [emailVisible, emailBoxRef]);\n\n  const passDataUpstream = (data) => {\n    Object.keys(data).forEach((key) => {\n      setState({ ...state, [key]: data[key] });\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"main\">\n        <Container>\n          <Row>\n            <Col>\n              <IntroContent />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div className=\"typeform\">\n                <TypeForm\n                  passDataUpstream={passDataUpstream}\n                  isMobile={isMobile}\n                />\n              </div>\n            </Col>\n          </Row>\n          {positiveTypeFormResponseReturned && (\n            <>\n              <Row>\n                <Col>\n                  <div ref={displayMpRef}>\n                    <DisplayMp mpData={mpData} />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <div id=\"mpForm\" className=\"\">\n                    <MpForm passDataUpstream={passDataUpstream} />\n                  </div>\n                </Col>\n              </Row>\n              {/* {emailVisible && ( */}\n              <div>\n                <Row>\n                  <Col>\n                    <div ref={emailBoxRef}>\n                      <TextBox\n                        passDataUpstream={passDataUpstream}\n                        emailBody={emailWithGreeting}\n                        subject={emailSubject}\n                      />\n                    </div>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col>\n                    <div className=\"\">\n                      <SendEmail\n                        mpEmailAddress={mpData.mpEmailAddress}\n                        body={emailWithGreeting}\n                        subject={emailSubject}\n                      />\n                    </div>\n                  </Col>\n                </Row>\n              </div>\n              {/* )} */}\n            </>\n          )}\n        </Container>\n      </div>\n      {/* <div className=\"footer\">\n        <Container>\n          <Footer />\n        </Container>\n      </div> */}\n    </div>\n\n    // Cookie banner here\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TagManager from \"react-gtm-module\";\nimport { Router } from \"@reach/router\";\nimport HttpsRedirect from \"react-https-redirect\";\n\nimport App from \"./App\";\nimport PrivacyPolicy from \"./PrivacyPolicy\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst tagManagerArgs = {\n  gtmId: \"GTM-MWBT83W\",\n};\n\nTagManager.initialize(tagManagerArgs);\n\nReactDOM.render(\n  <HttpsRedirect>\n    <Router>\n      <App path=\"/\" />\n      {/* <PrivacyPolicy path=\"/privacy-policy\" /> */}\n    </Router>\n  </HttpsRedirect>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}