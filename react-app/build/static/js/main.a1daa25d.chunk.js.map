{"version":3,"sources":["TypeForm.jsx","TextBox.jsx","MpForm.jsx","DisplayMp.jsx","SendEmail.jsx","IntroContent.jsx","Footer.jsx","App.jsx","PrivacyPolicy.jsx","reportWebVitals.js","index.js"],"names":["TypeForm","passDataUpstream","isMobile","typeformComponent","useRef","buttonRef","useState","typeformWidgetOpen","setTypeformWidgetOpen","mobileTypeform","typeformEmbed","mode","openValue","autoClose","onSubmit","response_id","responseId","useEffect","current","hideScrollbars","opacity","setTimeout","className","ref","onClick","open","scrollIntoView","behavior","block","id","TextBox","emailBody","viewContainerClassName","type","inputProps","placeholder","rows","saveButtonContent","cancelButtonContent","editButtonContent","value","onSave","val","generatedEmail","trigger","closeOnDocumentClick","onOpen","el","document","createElement","body","appendChild","select","setSelectionRange","execCommand","removeChild","copied","MpForm","emailBoxRef","emailVisible","dropDownOpen","postcodeError","state","setState","dropdownRef","window","scrollBy","postToApi","postcode","a","fetch","method","headers","then","response","json","data","error","mpData","handleValidation","test","toUpperCase","length","e","preventDefault","initialValues","validate","values","htmlFor","name","DisplayMp","constituency","full_name","party","mpEmailAddress","sendEmail","subject","href","encodeURIComponent","target","rel","IntroContent","Footer","Row","Col","xs","lg","to","require","config","path","socket","socketIOClient","App","width","innerWidth","generatedEmailBody","emailSubject","positiveTypeFormResponseReturned","greeting","emailWithGreeting","displayMpRef","getEmailAddress","toLowerCase","replace","on","formToken","supportsAid","mpName","handleWindowSizeChange","addEventListener","removeEventListener","Object","keys","forEach","key","Container","SendEmail","PrivacyPolicy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TagManager","initialize","gtmId","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a1daa25d.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport * as typeformEmbed from \"@typeform/embed\";\n\nconst TypeForm = ({ passDataUpstream, isMobile }) => {\n  const typeformComponent = useRef(null);\n  const buttonRef = useRef(null);\n  const [typeformWidgetOpen, setTypeformWidgetOpen] = useState(true);\n\n  const mobileTypeform = typeformEmbed.makePopup(\n    `https://z8ivgb8lhnl.typeform.com/to/YbkRDwtc`,\n    {\n      mode: \"popup\",\n      openValue: 50,\n      autoClose: 3,\n      onSubmit: ({ response_id }) => {\n        passDataUpstream({ responseId: response_id });\n      },\n    }\n  );\n\n  useEffect(() => {\n    !isMobile &&\n      typeformEmbed.makeWidget(\n        typeformComponent.current,\n        `https://z8ivgb8lhnl.typeform.com/to/YbkRDwtc`,\n        {\n          hideScrollbars: true,\n          opacity: 0,\n          onSubmit: ({ response_id }) => {\n            passDataUpstream({ responseId: response_id });\n            setTimeout(() => {\n              setTypeformWidgetOpen(false);\n            }, 3000);\n          },\n        }\n      );\n  }, [typeformComponent, passDataUpstream, isMobile]);\n\n  return (\n    <div>\n      <div className=\"call-to-action text-center\">\n        <button\n          ref={buttonRef}\n          onClick={() => {\n            isMobile\n              ? mobileTypeform.open()\n              : typeformComponent.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"end\",\n                });\n          }}\n          className=\"btn btn-primary btn-lg main-cta\"\n        >\n          Fill out the survey to email your MP{\" \"}\n        </button>\n        <p className=\"explanation\">\n          <strong>We will draft an email</strong> based on your survey\n          responses,{\" \"}\n          <strong>written to have the maximum impact on your MP.</strong> With\n          your help we can safeguard the support so many need.\n        </p>\n      </div>\n      <div\n        ref={typeformComponent}\n        className={`typeform-widget ${typeformWidgetOpen ? \"\" : \"closed\"}`}\n        id=\"typeform\"\n      />\n    </div>\n  );\n};\n\nexport default TypeForm;\n","/* eslint react-hooks/exhaustive-deps: 0 */ // --> turns eslint warning message off\n\nimport React from \"react\";\nimport EdiText from \"react-editext\";\n\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\n\nconst TextBox = ({ emailBody, passDataUpstream }) => {\n  const copyToClipboard = () => {\n    const el = document.createElement(\"textarea\"); //creating a text area to be removed later (bit hacky)\n    el.value = emailBody;\n    document.body.appendChild(el);\n    el.select();\n    el.setSelectionRange(0, 99999); /* For mobile devices */\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    passDataUpstream({ copied: true });\n  };\n\n  return (\n    <div>\n      <div>\n        <h2 className=\"secondary-header\">3.Edit your email</h2>\n        <EdiText\n          viewContainerClassName=\"emailBox\"\n          type=\"textarea\"\n          inputProps={{\n            placeholder: \"your email will appear here\",\n            rows: 10,\n          }}\n          saveButtonContent=\"Apply\"\n          cancelButtonContent={<strong>Cancel</strong>}\n          editButtonContent=\"Edit Your Email\"\n          value={emailBody} // validates the webhook response token against the response id from the embedded tyeform widget\n          onSave={(val) => {\n            passDataUpstream({ generatedEmail: val }); //if the user edits the text box, a new property called editedResponse is set in state\n          }}\n        />\n\n        <Popup\n          trigger={(open) => (\n            <button className=\"btn btn-outline-primary copy-button\">\n              Copy\n            </button>\n          )}\n          closeOnDocumentClick\n          onOpen={copyToClipboard}\n          className=\"copy-popup\"\n        >\n          <span> Copied to clipboard </span>\n        </Popup>\n      </div>\n    </div>\n  );\n};\n\nexport default TextBox;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\n\nconst MpForm = ({ passDataUpstream, emailBoxRef, emailVisible }) => {\n  const [state, setState] = useState({\n    dropDownOpen: false,\n    postcodeError: \"\",\n  });\n\n  const { dropDownOpen, postcodeError } = state;\n\n  const dropdownRef = useRef();\n\n  //if the dropdown postcode is opened, on 'don't see your MP' this scrolls the page down to it\n  useEffect(() => {\n    const { current } = dropdownRef;\n    current &&\n      current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"end\",\n      });\n    window.scrollBy(0, 100);\n  }, [dropDownOpen]);\n\n  //once the emailBox postcode is rendered on click of 'Continue with this MP', this scrolls the page down to it\n  useEffect(() => {\n    const { current } = emailBoxRef;\n    current &&\n      current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\",\n      });\n  }, [emailVisible, emailBoxRef]);\n\n  const postToApi = async (postcode) => {\n    const response = await fetch(`/api/postcode/${postcode}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          setState({ ...state, postcodeError: data.error });\n        } else {\n          passDataUpstream({ mpData: data });\n          setState({ ...state, postcodeError: \"\" });\n        }\n      });\n    return response;\n  };\n\n  const handleValidation = ({ postcode }) => {\n    const postCodeRegex = /([A-Z][A-HJ-Y]?[0-9][A-Z0-9]? ?[0-9][A-Z]{2}|GIR ?0A{2})$/;\n    if (postCodeRegex.test(postcode.toUpperCase())) {\n      postToApi(postcode);\n    } else {\n      if (postcode.length > 5) {\n        setState({ ...state, postcodeError: \"Invalid postcode\" });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"button-container\" id=\"postcodeDropdown\">\n        <button\n          className=\"btn btn-lg cta btn-outline-primary left-button\"\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            setState({ ...state, dropDownOpen: true });\n          }}\n        >\n          Don't see your MP?\n        </button>\n        <button\n          className=\"btn btn-lg cta btn-primary right-button \"\n          type=\"submit\"\n          onClick={(e) => {\n            e.preventDefault();\n            setState({ ...state, dropDownOpen: false });\n            passDataUpstream({ emailVisible: true });\n          }}\n        >\n          Yes, continue with this MP\n        </button>\n      </div>\n      {dropDownOpen && (\n        <Formik\n          initialValues={{ postcode: \"\" }}\n          validate={handleValidation}\n          onSubmit={handleValidation}\n        >\n          {(values) => (\n            <Form\n              className=\"get-MP-form\"\n              id=\"postcodeDropdown\"\n              ref={dropdownRef}\n            >\n              <label htmlFor=\"postcode\">Postcode:</label>\n              <Field type=\"text\" name=\"postcode\" />\n              <div className=\"error postcode-error\">\n                {postcodeError ? postcodeError : \"\"}\n              </div>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </div>\n  );\n};\nexport default MpForm;\n","import React from \"react\";\n\nconst DisplayMp = ({\n  mpData: { constituency, full_name, party, name, error },\n  mpEmailAddress,\n}) => (\n  <div className=\"displayMP\" id=\"displayMP\">\n    <h2 className=\"secondary-header\">2. Find Your MP</h2>\n    <div className=\"mpCard text-center\">\n      <div className=\"error\">{error}</div>\n      <div>{constituency}</div>\n      <div>{name}</div>\n      <div>{full_name}</div>\n      <div>{party}</div>\n      <div className=\"mpEmailAddress\">{mpEmailAddress}</div>\n    </div>\n  </div>\n);\nexport default DisplayMp;\n","import React from \"react\";\n\nconst sendEmail = ({ subject, body, mpEmailAddress }) => {\n  return (\n    <div className=\"send-email\">\n      <h2 className=\"secondary-header\">4. Send your email</h2>\n      <p className=\"explanation\">\n        This will open your email service in a different window\n      </p>\n      <a\n        href={\n          \"mailto:\" +\n          mpEmailAddress +\n          \"?Subject=\" +\n          encodeURIComponent(subject) +\n          \"&Body=\" +\n          encodeURIComponent(body)\n        }\n        className=\"btn btn-primary btn-lg cta send-button\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        SEND EMAIL\n      </a>\n    </div>\n  );\n};\nexport default sendEmail;\n","import React from \"react\";\n\n// import ArrowDown from \"./assets/arrow-down.svg\";\n\nconst IntroContent = () => (\n  <div className=\"intro-content\">\n    <h1 className=\"title\">The 0.7% Campaign</h1>\n    <p className=\"intro-para\">\n      The 2019 Conservative Manifesto declared Britain would{\" \"}\n      <strong>\n        \"proudly maintain our commitment to spend 0.7 per cent of GNI on\n        development\"\n      </strong>\n      . But just one year later, the government intends to cut foreign aid\n      indefinitely.<br></br>\n      <br></br> At a time of unprecedented international crisis, with millions\n      at risk of extreme poverty,{\" \"}\n      <strong>Britain must show leadership - not break its commitments.</strong>\n    </p>\n  </div>\n);\nexport default IntroContent;\n","import { Link } from \"@reach/router\";\nimport React from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\n\nconst Footer = () => (\n  <div id=\"Footer\">\n    <Row>\n      <Col>\n        <h3 className=\"text-center\">The 0.7% Campaign</h3>\n      </Col>\n    </Row>\n    <Row>\n      <Col xs={12} lg={6}>\n        <Link to=\"privacy-policy\">Privacy Policy</Link>\n        {/* <Link to=\"about\"> */}\n        Who we are\n        {/* </Link> */}\n      </Col>\n      <Col xs={12} lg={6}>\n        <a href=\"mailto:email@example.com\">email@example.com</a>\n        <a href=\"https://concepts.effectivealtruism.org/concepts/aid-effectiveness/\">\n          Further reading on aid\n        </a>\n      </Col>\n    </Row>\n  </div>\n);\nexport default Footer;\n","/* eslint react-hooks/exhaustive-deps: 0 */ // --> turns eslint warning message off\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport TypeForm from \"./TypeForm\";\nimport TextBox from \"./TextBox\";\nimport MpForm from \"./MpForm\";\nimport DisplayMp from \"./DisplayMp\";\nimport SendEmail from \"./SendEmail\";\nimport IntroContent from \"./IntroContent\";\nimport Footer from \"./Footer\";\n\nimport \"./App.scss\";\n\nrequire(\"dotenv\").config({ path: \"../.env\" });\n\nconst socket = socketIOClient();\n\nconst App = () => {\n  const [state, setState] = useState({\n    width: window.innerWidth,\n    responseId: \"\",\n    mpData: { error: \"Could not find MP\", name: \"\", full_name: \"\" },\n    generatedEmailBody: \"Your email will appear here\",\n    emailSubject: \"\",\n    positiveTypeFormResponseReturned: false,\n    mpEmailAddress: \"\",\n    greeting: \"\",\n    emailWithGreeting: \"\",\n    emailVisible: false,\n  });\n\n  const {\n    responseId,\n    mpData,\n    generatedEmailBody,\n    emailSubject,\n    mpEmailAddress,\n    greeting,\n    emailWithGreeting,\n    positiveTypeFormResponseReturned,\n    width,\n    emailVisible,\n  } = state;\n\n  const displayMpRef = useRef(null);\n  const emailBoxRef = useRef(null);\n\n  const getEmailAddress = (mpData) => {\n    if (mpData.error) return;\n    else {\n      const { name, full_name } = mpData;\n      const mpName = full_name ? full_name : name;\n      return (\n        mpName.toLowerCase().replace(\" \", \".\").replace(\"'\", \"\") +\n        \".mp@parliament.uk\"\n      );\n    }\n  };\n\n  useEffect(() => {\n    socket.on(\"typeform-incoming\", ({ formToken, generatedEmail }) => {\n      if (formToken === responseId) {\n        setState({\n          ...state,\n          generatedEmailBody: generatedEmail.body,\n          emailSubject: generatedEmail.subject,\n          mpData: generatedEmail.mpData,\n          greeting: generatedEmail.greeting,\n          mpEmailAddress: getEmailAddress(generatedEmail.mpData),\n          emailWithGreeting: generatedEmail.greeting + generatedEmail.body,\n          positiveTypeFormResponseReturned: generatedEmail.supportsAid,\n        });\n      }\n    });\n  }, [responseId]);\n\n  useEffect(() => {\n    if (mpData) {\n      const { name, full_name } = mpData;\n      const mpName = full_name ? full_name : name;\n      if (mpName) {\n        setState({\n          ...state,\n          mpEmailAddress: getEmailAddress(mpData),\n          greeting: `Dear ${mpName},\\n`,\n        });\n      }\n    }\n  }, [mpData.name, mpData.full_name]);\n\n  useEffect(() => {\n    setState({\n      ...state,\n      emailWithGreeting: greeting + generatedEmailBody,\n    });\n  }, [generatedEmailBody, greeting]);\n\n  const handleWindowSizeChange = () => {\n    setState({ ...state, width: window.innerWidth });\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n\n  let isMobile = width && width <= 768;\n\n  useEffect(() => {\n    setTimeout(() => {\n      const { current } = displayMpRef;\n      if (current) {\n        if (isMobile) {\n          if (positiveTypeFormResponseReturned) {\n            current.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"start\",\n            });\n          }\n        }\n      }\n    }, 3000);\n  }, [displayMpRef, positiveTypeFormResponseReturned]);\n\n  const passDataUpstream = (data) => {\n    Object.keys(data).forEach((key) => {\n      setState({ ...state, [key]: data[key] });\n    });\n  };\n\n  return (\n    <div>\n      <div className=\"app-body\">\n        <Container>\n          <Row>\n            <Col>\n              <IntroContent />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <div className=\"typeform\">\n                <TypeForm\n                  passDataUpstream={passDataUpstream}\n                  isMobile={isMobile}\n                />\n              </div>\n            </Col>\n          </Row>\n          {positiveTypeFormResponseReturned && (\n            <>\n              <Row>\n                <Col>\n                  <div ref={displayMpRef}>\n                    <DisplayMp\n                      mpData={mpData}\n                      mpEmailAddress={mpEmailAddress}\n                    />\n                  </div>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <div id=\"mpForm\" className=\"\">\n                    <MpForm\n                      passDataUpstream={passDataUpstream}\n                      emailBoxRef={emailBoxRef}\n                      emailVisible={emailVisible}\n                    />\n                  </div>\n                </Col>\n              </Row>\n              {emailVisible && (\n                <div>\n                  <Row>\n                    <Col>\n                      <div ref={emailBoxRef}>\n                        <TextBox\n                          passDataUpstream={passDataUpstream}\n                          emailBody={emailWithGreeting}\n                          subject={emailSubject}\n                        />\n                      </div>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col>\n                      <div className=\"\">\n                        <SendEmail\n                          mpEmailAddress={mpEmailAddress}\n                          body={emailWithGreeting}\n                          subject={emailSubject}\n                        />\n                      </div>\n                    </Col>\n                  </Row>\n                </div>\n              )}\n            </>\n          )}\n        </Container>\n      </div>\n      <div className=\"footer\">\n        <Container>\n          <Footer />\n        </Container>\n      </div>\n    </div>\n\n    // Cookie banner here\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nconst PrivacyPolicy = () => (\n  <div className=\"privacy-policy\">\n    <Container>\n      <Row>\n        <Col>\n          <h1>Privacy Policy</h1>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <p>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n            eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim\n            ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut\n            aliquip ex ea commodo consequat. Duis aute irure dolor in\n            reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\n            pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\n            culpa qui officia deserunt mollit anim id est laborum.\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  </div>\n);\nexport default PrivacyPolicy;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TagManager from \"react-gtm-module\";\nimport { Router } from \"@reach/router\";\nimport HttpsRedirect from \"react-https-redirect\";\n\nimport App from \"./App\";\nimport PrivacyPolicy from \"./PrivacyPolicy\";\n\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst tagManagerArgs = {\n  gtmId: \"GTM-MWBT83W\",\n};\n\nTagManager.initialize(tagManagerArgs);\n\nReactDOM.render(\n  <HttpsRedirect>\n    <Router>\n      <App path=\"/\" />\n      <PrivacyPolicy path=\"/privacy-policy\" />\n    </Router>\n  </HttpsRedirect>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}