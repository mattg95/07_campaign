{"version":3,"sources":["TypeForm.jsx","TextBox.jsx","MpForm.jsx","DisplayMp.jsx","SendEmail.jsx","IntroContent.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["TypeForm","passDataUpstream","myRef","useRef","mpForm","document","getElementById","useEffect","typeformEmbed","current","hideFooter","hideHeaders","opacity","onSubmit","response_id","responseId","setTimeout","scrollIntoView","ref","className","id","TextBox","emailBody","viewContainerClassName","type","inputProps","placeholder","rows","saveButtonContent","cancelButtonContent","editButtonContent","value","onSave","val","generatedEmail","trigger","open","closeOnDocumentClick","onOpen","el","createElement","body","appendChild","select","setSelectionRange","execCommand","removeChild","copied","MpForm","useState","dropDownOpen","postcodeError","state","setState","postToApi","postcode","a","fetch","method","headers","then","response","json","data","error","mpData","handleValidation","test","toUpperCase","length","onClick","href","initialValues","validate","values","htmlFor","name","DisplayMp","constituency","full_name","party","mpEmailAddress","sendEmail","subject","encodeURIComponent","target","rel","IntroContent","require","config","path","socket","socketIOClient","App","generatedEmailBody","emailSubject","positiveTypeFormResponseReturned","greeting","emailWithGreeting","on","formToken","console","log","supportsAid","mpName","toLowerCase","replace","Object","keys","forEach","key","Container","Row","Col","SendEmail","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","TagManager","initialize","gtmId","ReactDOM","render"],"mappings":"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","file":"static/js/main.69aff221.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as typeformEmbed from \"@typeform/embed\";\n\nconst TypeForm = ({ passDataUpstream }) => {\n  const myRef = useRef(null);\n  const mpForm = document.getElementById(\"displayMP\");\n\n  useEffect(() => {\n    typeformEmbed.makeWidget(\n      myRef.current,\n      `https://z8ivgb8lhnl.typeform.com/to/YbkRDwtc`,\n      {\n        hideFooter: true,\n        hideHeaders: true,\n        opacity: 0,\n        onSubmit: ({ response_id }) => {\n          passDataUpstream({ responseId: response_id });\n          setTimeout(() => {\n            mpForm && mpForm.scrollIntoView();\n          }, 3000);\n        },\n      }\n    );\n  }, [myRef, mpForm, passDataUpstream]);\n\n  return (\n    <div>\n      {/* potentially use state to close typform widget after completion */}\n      <div ref={myRef} className={`typeform-widget `} id=\"typeform\" />\n    </div>\n  );\n};\n\nexport default TypeForm;\n","/* eslint react-hooks/exhaustive-deps: 0 */ // --> turns eslint warning message off\n\nimport React from \"react\";\nimport EdiText from \"react-editext\";\n\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\n\nconst TextBox = ({ emailBody, passDataUpstream }) => {\n  const copyToClipboard = () => {\n    const el = document.createElement(\"textarea\"); //creating a text area to be removed later (bit hacky)\n    el.value = emailBody;\n    document.body.appendChild(el);\n    el.select();\n    el.setSelectionRange(0, 99999); /* For mobile devices */\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    passDataUpstream({ copied: true });\n  };\n\n  return (\n    <div>\n      <div>\n        <h2 className=\"secondary-header\">3.Edit your email</h2>\n        <EdiText\n          viewContainerClassName=\"emailBox\"\n          type=\"textarea\"\n          inputProps={{\n            placeholder: \"your email will appear here\",\n            rows: 10,\n          }}\n          saveButtonContent=\"Apply\"\n          cancelButtonContent={<strong>Cancel</strong>}\n          editButtonContent=\"Edit Your Email\"\n          value={emailBody} // validates the webhook response token against the response id from the embedded tyeform widget\n          onSave={(val) => {\n            passDataUpstream({ generatedEmail: val }); //if the user edits the text box, a new property called editedResponse is set in state\n          }}\n        />\n\n        <Popup\n          trigger={(open) => (\n            <button className=\"btn btn-outline-primary copy-button\">\n              Copy\n            </button>\n          )}\n          closeOnDocumentClick\n          onOpen={copyToClipboard}\n          className=\"copy-popup\"\n        >\n          <span> Copied to clipboard </span>\n        </Popup>\n      </div>\n    </div>\n  );\n};\n\nexport default TextBox;\n","import React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\n\nconst MpForm = ({ passDataUpstream }) => {\n  const [state, setState] = useState({\n    dropDownOpen: false,\n    postcodeError: \"\",\n  });\n  const { dropDownOpen, postcodeError } = state;\n\n  const postToApi = async (postcode) => {\n    const response = await fetch(`/api/postcode/${postcode}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          setState({ ...state, postcodeError: data.error });\n        } else {\n          passDataUpstream({ mpData: data });\n          setState({ ...state, postcodeError: \"\" });\n        }\n      });\n    return response;\n  };\n\n  const handleValidation = ({ postcode }) => {\n    const postCodeRegex = /([A-Z][A-HJ-Y]?[0-9][A-Z0-9]? ?[0-9][A-Z]{2}|GIR ?0A{2})$/;\n    if (postCodeRegex.test(postcode.toUpperCase())) {\n      postToApi(postcode);\n    } else {\n      if (postcode.length > 5) {\n        setState({ ...state, postcodeError: \"Invalid postcode\" });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"button-container\">\n        <button\n          className=\"btn btn-lg cta btn-outline-primary\"\n          type=\"submit\"\n          onClick={() => setState({ ...state, dropDownOpen: true })}\n        >\n          Don't see your MP?\n        </button>\n        <a href=\"#emailBox\">\n          <button\n            className=\"btn btn-lg cta btn-primary\"\n            type=\"submit\"\n            onClick={() => setState({ ...state, dropDownOpen: false })}\n          >\n            Continue with this MP\n          </button>\n        </a>\n      </div>\n      {dropDownOpen && (\n        <Formik\n          initialValues={{ postcode: \"\" }}\n          validate={handleValidation}\n          onSubmit={handleValidation}\n        >\n          {(values) => (\n            <Form className=\"get-MP-form\">\n              <label htmlFor=\"postcode\">Postcode:</label>\n              <Field type=\"text\" name=\"postcode\" />\n              <div className=\"error postcode-error\">\n                {postcodeError ? postcodeError : \"\"}\n              </div>\n            </Form>\n          )}\n        </Formik>\n      )}\n    </div>\n  );\n};\nexport default MpForm;\n","import React from \"react\";\n\nconst DisplayMp = ({\n  mpData: { constituency, full_name, party, name, error },\n  mpEmailAddress,\n}) => (\n  <div className=\"displayMP\" id=\"displayMP\">\n    <h2 className=\"secondary-header\">2. Find Your MP</h2>\n    <div className=\"mpCard text-center\">\n      <div className=\"error\">{error}</div>\n      <div>{constituency}</div>\n      <div>{name}</div>\n      <div>{full_name}</div>\n      <div>{party}</div>\n      <div>{mpEmailAddress}</div>\n    </div>\n  </div>\n);\nexport default DisplayMp;\n","import React from \"react\";\n\nconst sendEmail = ({ subject, body, mpEmailAddress }) => {\n  return (\n    <div className=\"send-email\">\n      <h2 className=\"secondary-header\">4. Send your email</h2>\n      <p className=\"explanation\">\n        This will open your email service in a different window\n      </p>\n      <a\n        href={\n          \"mailto:\" +\n          mpEmailAddress +\n          \"?Subject=\" +\n          encodeURIComponent(subject) +\n          \"&Body=\" +\n          encodeURIComponent(body)\n        }\n        className=\"btn btn-primary btn-lg cta send-button\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        SEND EMAIL\n      </a>\n    </div>\n  );\n};\nexport default sendEmail;\n","import React from \"react\";\n\n// import ArrowDown from \"./assets/arrow-down.svg\";\n\nconst IntroContent = () => (\n  <div className=\"intro-content\">\n    <h1 className=\"title\">0.7% Campaign</h1>\n    <p className=\"intro-para\">\n      Info about our campaign. Lorem ipsum dolor sit amet, consectetur\n      adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore\n      magna aliqua.\n    </p>\n    <div className=\"\">\n      <h2 className=\"secondary-header\">1. Fill out the form</h2>\n      <p className=\"explanation\">\n        This will generate an email to send to your MP\n      </p>\n      {/* <a href=\"#typeform\">\n        <img\n          src={ArrowDown}\n          alt=\"arrow pointing down the webpage\"\n          className=\"arrow-down\"\n        />\n      </a> */}\n    </div>\n  </div>\n);\nexport default IntroContent;\n","/* eslint react-hooks/exhaustive-deps: 0 */ // --> turns eslint warning message off\n\nimport React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport TypeForm from \"./TypeForm\";\nimport TextBox from \"./TextBox\";\nimport MpForm from \"./MpForm\";\nimport DisplayMp from \"./DisplayMp\";\nimport SendEmail from \"./SendEmail\";\nimport IntroContent from \"./IntroContent\";\n\nimport \"./App.scss\";\n\nrequire(\"dotenv\").config({ path: \"../.env\" });\n\nconst socket = socketIOClient();\n\nconst App = () => {\n  const [state, setState] = useState({\n    responseId: \"\",\n    mpData: { error: \"Could not find MP\" },\n    generatedEmailBody: \"Your email will appear here\",\n    emailSubject: \"\",\n    positiveTypeFormResponseReturned: false,\n    mpEmailAddress: \"\",\n    greeting: \"\",\n    emailWithGreeting: \"\",\n  });\n\n  const {\n    responseId,\n    mpData,\n    generatedEmailBody,\n    emailSubject,\n    mpEmailAddress,\n    greeting,\n    emailWithGreeting,\n    positiveTypeFormResponseReturned,\n  } = state;\n\n  useEffect(() => {\n    socket.on(\"typeform-incoming\", ({ formToken, generatedEmail }) => {\n      if (formToken === responseId) {\n        console.log(generatedEmail);\n        setState({\n          ...state,\n          generatedEmailBody: generatedEmail.body,\n          emailSubject: generatedEmail.subject,\n          mpData: generatedEmail.mpData,\n          greeting: generatedEmail.greeting,\n          positiveTypeFormResponseReturned: generatedEmail.supportsAid,\n        });\n      }\n    });\n  }, [responseId]);\n\n  useEffect(() => {\n    setState({\n      ...state,\n      emailWithGreeting: greeting + generatedEmailBody,\n    });\n  }, [generatedEmailBody, greeting]);\n\n  useEffect(() => {\n    if (mpData) {\n      const { name, full_name } = mpData;\n      const mpName = full_name ? full_name : name;\n      if (mpName) {\n        setState({\n          ...state,\n          mpEmailAddress:\n            mpName.toLowerCase().replace(\" \", \".\") + \".mp@parliament.uk\",\n          greeting: `Dear ${mpName},\\n`,\n        });\n      }\n    }\n  }, [mpData]);\n\n  const passDataUpstream = (data) => {\n    Object.keys(data).forEach((key) => {\n      setState({ ...state, [key]: data[key] });\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col>\n            <IntroContent />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div className=\"typeform\">\n              <TypeForm passDataUpstream={passDataUpstream} />\n            </div>\n          </Col>\n        </Row>\n        {positiveTypeFormResponseReturned && (\n          <>\n            <Row>\n              <Col>\n                <div className=\"\">\n                  <DisplayMp mpData={mpData} mpEmailAddress={mpEmailAddress} />\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <div id=\"mpForm\" className=\"\">\n                  <MpForm passDataUpstream={passDataUpstream} />\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <div id=\"emailBox\" className=\"\">\n                  <TextBox\n                    passDataUpstream={passDataUpstream}\n                    emailBody={emailWithGreeting}\n                    subject={emailSubject}\n                  />\n                </div>\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <div className=\"\">\n                  <SendEmail\n                    mpEmailAddress={mpEmailAddress}\n                    body={emailWithGreeting}\n                    subject={emailSubject}\n                  />\n                </div>\n              </Col>\n            </Row>\n          </>\n        )}\n      </Container>\n    </div>\n    // Cookie banner here\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport TagManager from \"react-gtm-module\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst tagManagerArgs = {\n  gtmId: \"GTM-MWBT83W\",\n};\n\nTagManager.initialize(tagManagerArgs);\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}