{"version":3,"sources":["DisplayMp.jsx","FindMp.jsx","TextBox.jsx","TypeForm.jsx","arrow-down.svg","App.jsx","reportWebVitals.js","index.js"],"names":["DisplayMp","data","constituency","full_name","party","name","body","subject","createMpEmail","toLowerCase","replace","className","href","encodeURIComponent","Object","values","join","target","MpForm","useState","error","state","setState","postToApi","postcode","a","fetch","method","headers","then","response","json","handleValidation","test","toUpperCase","length","initialValues","validate","onSubmit","component","htmlFor","type","socket","socketIOClient","TextBox","responseId","editedRes","copied","generatedEmail","useEffect","on","formToken","viewContainerClassName","inputProps","placeholder","rows","saveButtonContent","cancelButtonContent","editButtonContent","value","onSave","val","trigger","open","position","closeOnDocumentClick","onOpen","text","el","document","createElement","appendChild","select","setSelectionRange","execCommand","removeChild","TypeForm","myRef","useRef","isClosed","element","getElementById","typeformEmbed","current","hideFooter","hideHeaders","opacity","response_id","setTimeout","scrollIntoView","ref","id","require","config","path","App","Container","Row","Col","src","ArrowDown","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.0b7e42c4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DisplayMp = ({\n  data: { constituency, full_name, party, name },\n  body = \"\",\n  subject = \"\",\n}) => {\n  const createMpEmail = () => {\n    const mpName = full_name ? full_name : name;\n    return mpName.toLowerCase().replace(\" \", \".\") + \".mp@parliament.uk\";\n  };\n  const createEmailBody = () => {\n    const mpName = full_name ? full_name : name;\n    return `Dear ${mpName},\\n${Object.values(body).join(\"\")}`;\n  };\n  return (\n    <div>\n      <div className=\"mpCard\">\n        <div>{constituency}</div>\n        <div>{name}</div>\n        <div>{full_name}</div>\n        <div>{party}</div>\n        <div> {createMpEmail()}</div>\n      </div>\n      <h2 className=\"secondary-header\">4. Send your email</h2>\n      <p className=\"explanation\">\n        This will open your email service in a different tab\n      </p>\n      <a\n        href={\n          \"mailto:\" +\n          createMpEmail() +\n          \"?Subject=\" +\n          encodeURIComponent(subject) +\n          \"&Body=\" +\n          encodeURIComponent(createEmailBody())\n        }\n        className=\"btn btn-primary send-email-button\"\n        target=\"_blank\"\n      >\n        SEND EMAIL\n      </a>\n    </div>\n  );\n};\nexport default DisplayMp;\n","// Render Prop\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport DisplayMp from \"./DisplayMp\";\n\nconst MpForm = ({ body, subject }) => {\n  const [state, setState] = useState({ data: \"\", error: \"\" });\n\n  const postToApi = async (postcode) => {\n    const response = await fetch(`/api/postcode/${postcode}`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.error) {\n          setState({ ...state, error: data.error });\n        } else setState({ error: \"\", data: data });\n      });\n    return response;\n  };\n\n  const handleValidation = ({ postcode }) => {\n    const postCodeRegex = /([A-Z][A-HJ-Y]?[0-9][A-Z0-9]? ?[0-9][A-Z]{2}|GIR ?0A{2})$/;\n    if (postCodeRegex.test(postcode.toUpperCase())) {\n      postToApi(postcode);\n    } else {\n      if (postcode.length > 5) {\n        setState({ ...state, error: \"Invalid postcode\" });\n      }\n    }\n  };\n\n  return (\n    <div>\n      <h2 className=\"secondary-header\">3. Find Your Mp</h2>\n      <Formik\n        initialValues={{ postcode: \"\" }}\n        validate={handleValidation}\n        onSubmit={handleValidation}\n      >\n        {(values) => (\n          <Form className=\"getMpForm\">\n            <ErrorMessage name=\"postcode\" component=\"div\" />\n            <label htmlFor=\"postcode\">Postcode:</label>\n            <Field type=\"text\" name=\"postcode\" />\n            {state.error && <div>{state.error}</div>}\n          </Form>\n        )}\n      </Formik>\n      {state.data && (\n        <DisplayMp data={state.data} body={body} subject={subject} />\n      )}\n    </div>\n  );\n};\nexport default MpForm;\n","import React, { useEffect, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport EdiText from \"react-editext\";\n\nimport Popup from \"reactjs-popup\";\nimport \"reactjs-popup/dist/index.css\";\n\nimport MpForm from \"./FindMp\";\n\nconst socket = socketIOClient();\n\nconst TextBox = ({ responseId }) => {\n  const [state, setState] = useState({\n    editedRes: \"\",\n    copied: false,\n    generatedEmail: { body: \"your email will appear here\" },\n  });\n\n  useEffect(() => {\n    socket.on(\"typeform-incoming\", ({ formToken, generatedEmail }) => {\n      if (formToken === responseId) {\n        setState({ ...state, generatedEmail: generatedEmail });\n      }\n    });\n  }, [responseId]);\n\n  function copyToClipboard() {\n    let text = \"\";\n    text = state.editedRes ? state.editedRes : state.generatedEmail.body;\n    const el = document.createElement(\"textarea\"); //creating a text area to be removed later (bit hacky)\n    el.value = text;\n    document.body.appendChild(el);\n    el.select();\n    el.setSelectionRange(0, 99999); /* For mobile devices */\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    setState({ ...state, copied: true });\n  }\n\n  return (\n    <div>\n      {/* {Object.keys(state.generatedEmail).length !== 0 && ( */}\n      <div>\n        <h2 className=\"secondary-header\">2.Edit your email</h2>\n        <EdiText\n          viewContainerClassName=\"emailBox\"\n          type=\"textarea\"\n          inputProps={{\n            placeholder: \"your email will appear here\",\n            rows: 10,\n          }}\n          saveButtonContent=\"Apply\"\n          cancelButtonContent={<strong>Cancel</strong>}\n          editButtonContent=\"Edit Your Email\"\n          value={state.editedRes ? state.editedRes : state.generatedEmail.body} // validates the webhook response token against the response id from the embedded tyeform widget\n          onSave={(val) => {\n            setState({ ...state, editedRes: val }); //if the user edits the text box, a new property called editedResponse is set in state\n          }}\n        />\n\n        <Popup\n          trigger={(open) => <button className=\"button\">Copy</button>}\n          position=\"right center\"\n          closeOnDocumentClick\n          onOpen={copyToClipboard}\n        >\n          <span> Copied to clipboard </span>\n        </Popup>\n\n        <div className=\"text-center\">\n          <MpForm\n            body={state.generatedEmail.body}\n            subject={state.generatedEmail.subject}\n          />\n        </div>\n      </div>\n      {/* )} */}\n    </div>\n  );\n};\n\nexport default TextBox;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport * as typeformEmbed from \"@typeform/embed\";\nimport TextBox from \"./TextBox\";\n\nconst TypeForm = () => {\n  const myRef = useRef(null);\n  const [state, setState] = useState({ isClosed: false, responseId: \"\" });\n\n  useEffect(() => {\n    var element = document.getElementById(\"emailBox\");\n    typeformEmbed.makeWidget(\n      myRef.current,\n      `https://z8ivgb8lhnl.typeform.com/to/YbkRDwtc`,\n      {\n        hideFooter: true,\n        hideHeaders: true,\n        opacity: 0,\n        onSubmit: ({ response_id }) => {\n          setState({ ...state, responseId: response_id });\n          setTimeout(() => {\n            element.scrollIntoView();\n            // setState({ ...state, isClosed: true });\n          }, 3000);\n        },\n      }\n    );\n  }, [myRef]);\n\n  return (\n    <div>\n      <div\n        ref={myRef}\n        className={`typeform-widget ${state.isClosed ? \"closed\" : \"\"}`}\n        id=\"typeform\"\n      />\n      <div id=\"emailBox\">\n        <TextBox responseId={state.responseId} />\n      </div>\n    </div>\n  );\n};\n\nexport default TypeForm;\n","export default __webpack_public_path__ + \"static/media/arrow-down.edc17002.svg\";","import \"./App.scss\";\nimport { Container, Row, Col } from \"react-bootstrap\";\n\nimport TypeForm from \"./TypeForm\";\nimport TextBox from \"./TextBox\";\nimport ArrowDown from \"./arrow-down.svg\";\n\nrequire(\"dotenv\").config({ path: \"../.env\" });\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col>\n            <h1 className=\"text-center title\">0.7% Campaign</h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <p className=\"text-center intro-para\">\n              Info about our campaign. Lorem ipsum dolor sit amet, consectetur\n              adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n              dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\n              exercitation ullamco laboris nisi ut aliquip ex ea commodo\n              consequat.Lorem ipsum dolor sit amet, consectetur adipiscing elit,\n              sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n              Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in\n              reprehenderit in voluptate velit esse cillum dolore eu fugiat\n              nulla pariatur. Excepteur sint occaecat cupidatat non proident,\n              sunt in culpa qui officia deserunt mollit anim id est laborum.\n            </p>\n            <div className=\"text-center\">\n              <h2 className=\"secondary-header\">1. Fill out the form</h2>\n              <p className=\"explanation\">\n                This will generate an email to send to your MP\n              </p>\n              <a href=\"#typeform\">\n                <img src={ArrowDown} className=\"arrow-down\" />\n              </a>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <div className=\"text-center\">\n              <TypeForm className=\"typeform\" />\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n    // Cookie banner here\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}